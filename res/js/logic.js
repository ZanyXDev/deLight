.pragma library

let CELL_COUNT = 25
let m_levels = [
        1,1,0,1,1,1,0,1,0,1,0,1,1,1,0,1,0,1,0,1,1,1,0,1,1,
        0,1,0,1,0,1,1,0,1,1,0,1,0,1,0,1,0,1,0,1,1,0,1,0,1,
        1,0,0,0,1,1,1,0,1,1,0,0,1,0,0,1,0,1,0,0,1,0,1,1,0,
        1,1,0,1,1,0,0,0,0,0,1,1,0,1,1,0,0,0,0,1,1,1,0,0,0,
        1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        0,0,0,1,1,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,1,1,0,0,0,
        0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,
        0,0,0,0,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,0,0,0,0,
        1,1,0,1,1,1,1,0,1,1,0,0,0,0,0,1,1,0,1,1,1,1,0,1,1,
        1,1,1,1,1,0,1,1,1,0,0,0,1,0,0,0,1,1,1,0,1,1,1,1,1,
        1,1,1,1,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,1,1,1,1,
        0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,
        1,0,0,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,1,
        1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,
        1,0,0,0,0,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,
        1,0,1,0,1,0,1,0,1,0,0,0,1,0,0,0,1,0,1,0,1,0,1,0,1,
        1,1,1,0,1,1,1,1,0,1,0,0,0,0,0,1,0,1,1,1,1,0,1,1,1,
        1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0,1,1,
        1,1,1,1,1,1,0,0,0,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,
        1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0,0,1,1,0,0,0,1,1,
        1,1,1,0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,1,
        1,1,1,1,1,0,0,1,0,0,0,0,1,0,0,0,0,1,0,0,1,1,1,1,1,
        0,0,0,0,0,0,1,1,0,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0,
        0,0,0,1,1,0,0,1,1,1,0,0,1,0,0,1,1,1,0,0,1,1,0,0,0,
        0,0,0,1,1,1,1,0,1,1,1,1,0,0,0,1,1,0,0,0,1,1,0,1,1,
        1,0,0,0,1,0,1,1,1,0,0,1,1,1,0,0,1,1,1,0,1,0,0,0,1,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,0,1,0,0,1,0,0,1,0,0,1,1,1,1,1,0,0,0,0,1,1,0,1,0,
        0,0,0,0,1,0,0,0,1,1,0,0,1,0,1,0,1,0,0,1,1,1,1,1,1,
        1,1,0,1,1,0,1,0,1,0,1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,
        0,1,1,0,0,0,1,1,0,1,0,1,0,0,1,1,1,0,0,0,1,1,1,1,0,
        0,0,0,0,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,0,1,0,0,1,0,
        1,0,1,1,1,0,0,1,0,1,0,0,0,0,0,1,1,1,1,0,1,1,0,1,0,
        1,1,0,1,1,0,1,0,1,1,0,0,0,1,0,1,1,0,0,0,1,1,1,1,0,
        1,1,1,1,1,0,0,0,1,0,0,1,0,1,1,1,1,1,0,1,1,0,1,0,0,
        0,0,0,1,1,1,0,1,1,0,0,0,1,0,0,0,1,1,1,1,1,0,0,1,0,
        0,0,0,0,1,0,0,1,1,1,1,1,0,0,1,1,1,1,0,0,0,0,1,0,0,
        0,0,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0,1,0,0,1,1,0,1,1,
        0,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,1,0,
        1,1,1,1,1,1,0,0,0,0,0,1,0,0,1,0,0,0,1,1,1,1,1,1,1,
        1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1,1,1,0,0,1,0,0,1,
        0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1,1,0,0,1,1,1,1,1,
        0,0,0,1,1,0,1,1,0,0,0,1,0,0,0,1,1,1,1,0,1,1,1,1,0,
        0,0,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,1,0,0,1,1,1,1,0,
        0,1,0,1,0,0,0,0,1,0,0,1,0,1,0,0,0,1,0,0,0,1,1,1,0,
        1,0,0,1,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,
        1,1,0,0,1,0,1,0,0,1,0,1,1,1,1,0,1,0,1,0,1,1,1,1,1,
        1,1,1,1,1,0,0,1,0,0,0,1,1,0,0,0,0,1,1,0,1,1,1,0,1,
        1,0,1,0,1,1,0,1,0,0,0,0,0,1,1,0,1,0,1,0,1,0,0,1,0
    ]
let m_effects =[
        0,  1, 2, 3, 4,
        15,16,17,18, 5,
        14,23,24,19, 6,
        13,22,21,20, 7,
        12,11,10,9,  8,
        1,  1, 1,1,  1,
        1,  2, 2,2,  1,
        1,  2, 3,2,  1,
        1,  2, 2,2,  1,
        1,  1, 1,1,  1,
    ]

function getRandomBgrImage(last) {
    let rnd = last;
    while (rnd === last) {
        rnd = Math.floor(Math.random() * 21)
    }

    let bgrStr = rnd.toString();

    if (bgrStr.length === 1) {
        bgrStr = "0" + bgrStr
    }
    return "qrc:/res/images/backgrounds/bgr" + bgrStr + ".jpg"
}

function fillModelFromLevels(m_model,m_level,m_effectType){
    let start_index = m_level * CELL_COUNT
    let start_effect_index = m_effectType * CELL_COUNT
    let m_delay = 0
    m_model.clear()
    console.log(`m_model,m_level ${m_level},m_effectType ${m_effectType}`)
    for (let i= 0; i< CELL_COUNT;i++){
        m_model.append({"cell":m_levels[start_index+i],"delay":m_effects[start_effect_index+i] * 300})
    }
}

function clickOnTile( m_model, x_pos,y_pos ){

    let m_index = -1
    let m_value

    if ( (x_pos - 1) >= 0 ){
        m_index = (x_pos - 1) + (y_pos *5)
        m_value = (m_model.get(m_index).cell) ? 0 : 1
        m_model.setProperty(m_index, "cell", m_value)
    }

    if ( (x_pos + 1) < 5 ){
        m_index = (x_pos + 1) + (y_pos *5)
        m_value = (m_model.get(m_index).cell) ? 0 : 1
        m_model.setProperty(m_index, "cell", m_value)
    }

    if ( (y_pos - 1) >= 0 ){
        m_index = x_pos + ( (y_pos - 1) *5)
        m_value = (m_model.get(m_index).cell) ? 0 : 1
        m_model.setProperty(m_index, "cell", m_value)
    }

    if ( (y_pos + 1) < 5 ){
        m_index = x_pos + ( (y_pos + 1) *5)
        m_value = (m_model.get(m_index).cell) ? 0 : 1
        m_model.setProperty(m_index, "cell", m_value)
    }
}

function isWinGame( m_model ){
    for( var i = 0; i < m_model.rowCount(); i++ ) {
       if (m_model.get(i).cell ===1 ){
           return false
       }
    }    
    return true
}
